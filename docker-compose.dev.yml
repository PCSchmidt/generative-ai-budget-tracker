# Docker Compose for AI Budget Tracker Development
# This setup connects the React web frontend with the FastAPI backend

version: '3.8'

services:
  # FastAPI Backend with Authentication & AI
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: budget_tracker_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://budget_user:budget_pass@db:5432/budget_tracker}
      - DEBUG=true
      - SECRET_KEY=${SECRET_KEY:-budget-tracker-dev-secret-key-2025}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:19006
    volumes:
      - ./backend:/app
    command: uvicorn app.main_light:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - db
    networks:
      - budget_network

  # React Web Frontend (Current Working Frontend)
  web-frontend:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: budget_tracker_web
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - budget_network
    stdin_open: true
    tty: true

  # React Native Frontend (Future Mobile Development)
  mobile-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: budget_tracker_mobile
    ports:
      - "19006:19006"  # Expo Dev Tools
      - "19000:19000"  # Metro Bundler
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - API_BASE_URL=http://backend:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - budget_network
    stdin_open: true
    tty: true
    profiles:
      - mobile  # Only start with --profile mobile

  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: budget_tracker_db
    environment:
      POSTGRES_DB: budget_tracker
      POSTGRES_USER: budget_user
      POSTGRES_PASSWORD: budget_pass
    ports:
      - "5432:5432"
    volumes:
      - budget_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - budget_network

volumes:
  budget_data:

networks:
  budget_network:
    driver: bridge
